
import java.util.ArrayList;

class BankAccount {
    private String accountNumber;
    private String accountHolderName;
    private double balance;

    // Constructor
    public BankAccount(String accountNumber, String accountHolderName, double initialDeposit) {
        this.accountNumber = accountNumber;
        this.accountHolderName = accountHolderName;
        this.balance = initialDeposit;
    }

    // Deposit method
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: $" + amount);
        } else {
            System.out.println("Deposit amount must be positive.");
        }
    }

    // Withdraw method
    public boolean withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrew: $" + amount);
            return true;
        } else {
            System.out.println("Insufficient funds or invalid amount.");
            return false;
        }
    }

    // Accessors
    public String getAccountNumber() {
        return accountNumber;
    }

    public String getAccountHolderName() {
        return accountHolderName;
    }

    public double getBalance() {
        return balance;
    }
}

// Customer Class
class Customer {
    private String name;
    private String customerId;
    private ArrayList<BankAccount> accounts;

    // Constructor
    public Customer(String name, String customerId) {
        this.name = name;
        this.customerId = customerId;
        this.accounts = new ArrayList<>();
    }

    // Add account
    public void addAccount(BankAccount account) {
        accounts.add(account);
        System.out.println("Account added: " + account.getAccountNumber());
    }

    // Get account by account number
    public BankAccount getAccount(String accountNumber) {
        for (BankAccount account : accounts) {
            if (account.getAccountNumber().equals(accountNumber)) {
                return account;
            }
        }
        return null;
    }

    // Display all accounts
    public void displayAccounts() {
        System.out.println("Accounts for customer: " + name);
        for (BankAccount account : accounts) {
            System.out.println("Account Number: " + account.getAccountNumber() + ", Balance: $" + account.getBalance());
        }
    }

    // Accessors
    public String getName() {
        return name;
    }

    public String getCustomerId() {
        return customerId;
    }
}

// Bank Class
class Bank {
    private String bankName;
    private ArrayList<Customer> customers;

    // Constructor
    public Bank(String bankName) {
        this.bankName = bankName;
        this.customers = new ArrayList<>();
    }

    // Add customer
    public void addCustomer(Customer customer) {
        customers.add(customer);
        System.out.println("Customer added: " + customer.getName() + ", ID: " + customer.getCustomerId());
    }

    // Get customer by ID
    public Customer getCustomer(String customerId) {
        for (Customer customer : customers) {
            if (customer.getCustomerId().equals(customerId)) {
                return customer;
            }
        }
        return null;
    }

    // Display all customers
    public void displayAllCustomers() {
        System.out.println("Customers of " + bankName + ":");
        for (Customer customer : customers) {
            System.out.println("Customer: " + customer.getName() + ", ID: " + customer.getCustomerId());
        }
    }
}

public class Main {

    public static void main(String[] args) {
        System.out.println("Welcome to SimpleBank!");

        System.out.println();
        
        // Create SimpleBank
        Bank simpleBank = new Bank("SimpleBank");

        // Create customer for SimpleBank
        Customer customer1 = new Customer("Muhd Fahim", "F007");
        simpleBank.addCustomer(customer1);

        // Create and add account to customer1
        BankAccount account1 = new BankAccount("A1001", "Muhd Fahim", 500.0);
        customer1.addAccount(account1);

        // Perform transactions for customer1
        System.out.println("Depositing $200 into account A1001...");
        account1.deposit(200.0);
        System.out.println("New balance: $" + account1.getBalance());

        System.out.println("Withdrawing $100 from account A1001...");
        account1.withdraw(100.0);
        System.out.println("New balance: $" + account1.getBalance());

        System.out.println();
        
        // Create and add account to customer1
        BankAccount account3 = new BankAccount("C3003", "Muhd Fahim", 800.0);
        customer1.addAccount(account3);

        // Perform transactions for customer1
        System.out.println("Depositing $200 into account C3003...");
        account3.deposit(200.0);
        System.out.println("New balance: $" + account3.getBalance());

        System.out.println("Withdrawing $100 from account C3003...");
        account3.withdraw(100.0);
        System.out.println("New balance: $" + account3.getBalance());

        System.out.println("");
        
        // Create customer2
        Customer customer2 = new Customer("Aqil Aiman", "G008");
        simpleBank.addCustomer(customer2);

        // Create and add account to customer2
        BankAccount account2 = new BankAccount("B2002", "Aqil Aiman", 100.0);
        customer2.addAccount(account2);

        // Perform transactions for customer2
        System.out.println("Depositing $200 into account B2002...");
        account2.deposit(200.0);
        System.out.println("New balance: $" + account2.getBalance());

        System.out.println("Withdrawing $100 from account B2002...");
        account2.withdraw(100.0);
        System.out.println("New balance: $" + account2.getBalance());

        System.out.println();
        
        simpleBank.displayAllCustomers();
        
        System.out.println();
        
        customer1.displayAccounts();
        customer2.displayAccounts();
        
    }
}
